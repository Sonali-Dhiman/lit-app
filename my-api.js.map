{"version":3,"file":"my-api.js","sourceRoot":"","sources":["src/my-api.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAC,IAAI,EAAC,GAAG,EAAE,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAiCnD,IAAM,KAAK,GAAX,MAAM,KAAM,SAAQ,UAAU;IAA9B;;QAMwB,cAAS,GAAsB,IAAI,CAAC;IAsDnE,CAAC;IApDY,iBAAiB;QACtB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,aAAa;QACf,IAAI;YACA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAC3E,oDAAoD;YACpD,MAAM,SAAS,GAAe,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACpD,0BAA0B;YAC1B,IAAI,CAAC,SAAS,GAAE,SAAS,CAAA;SAC5B;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAA;SACpD;IACL,CAAC;IAEQ,MAAM;QACX,eAAe;QACf,YAAY;QACZ,4BAA4B;QAC5B,iBAAiB;QACjB,gBAAgB;QAChB,yCAAyC;QACzC,kDAAkD;QAClD,mDAAmD;QACnD,kBAAkB;QAClB,iDAAiD;QACjD,YAAY;QACZ,aAAa;QACb,IAAI;QACJ,OAAO,IAAI,CAAA;;kBAED,IAAI,CAAC,SAAS,CAAC,CAAC;YACd,IAAI,CAAA;;;0BAGE,IAAI,CAAC,SAAS,CAAC,GAAG,CAChB,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;2CAEC,IAAI,CAAC,IAAI;4CACR,IAAI,CAAC,KAAK;;6BAEzB,CACJ;;qBAEJ;YACD,CAAC,CAAC,IAAI,CAAC,6BACX;;SAEP,CAAA;IACL,CAAC;;AA1De,YAAM,GAAG,GAAG,CAAA;;;;GAI7B,AAJuB,CAItB;AAC2B;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wCAAqC;AANtD,KAAK;IADjB,aAAa,CAAC,QAAQ,CAAC;GACX,KAAK,CA4DjB","sourcesContent":["import { LitElement,html,css } from \"lit\";\r\nimport {customElement, property} from \"lit/decorators.js\";\r\n\r\ninterface Geo {\r\n    lat: string;\r\n    lng: string;\r\n  }\r\n  \r\n  interface Address {\r\n    street: string;\r\n    suite: string;\r\n    city: string;\r\n    zipcode: string;\r\n    geo: Geo;\r\n  }\r\n  \r\n  interface Company {\r\n    name: string;\r\n    catchPhrase: string;\r\n    bs: string;\r\n  }\r\n  \r\n  interface UserData {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    address: Address;\r\n    phone: string;\r\n    website: string;\r\n    company: Company;\r\n  }\r\n  \r\n@customElement(\"my-api\")\r\nexport class MyApi extends LitElement {\r\n    static override styles = css`\r\n    :host {\r\n      font-family: 'Arial', sans-serif;\r\n    }\r\n  `;\r\n    @property({ type: Array }) userArray: UserData[] | null = null;\r\n\r\n    override connectedCallback(): void {\r\n        super.connectedCallback();\r\n        this.fetchUserData();\r\n    }\r\n\r\n    async fetchUserData (){\r\n        try {\r\n            const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n            // const userData: UserData = await response.json();\r\n            const userArray: UserData[] = await response.json();\r\n            // this.userData =userData\r\n            this.userArray =userArray\r\n        } catch (error) {\r\n            console.log(\"Error in fetching user data\", error)\r\n        }\r\n    }\r\n\r\n    override render(){\r\n        // return html`\r\n        //     <div>\r\n        //         ${this.userData ?\r\n        //         html `\r\n        //         <div>\r\n        //             <h2>User Information </h2>\r\n        //             <p>Name : ${this.userData.name}</p>\r\n        //             <p>Email: ${this.userData.email}</p>\r\n        //         </div>`\r\n        //         : html `<p>Loadin user data .....</p>`\r\n        //         }\r\n        //     </div>\r\n        // `\r\n        return html`\r\n            <div>\r\n                ${this.userArray ?\r\n                    html`\r\n                    <div>\r\n                        <h2>User Information </h2>\r\n                        ${this.userArray.map(\r\n                            (user) => html`\r\n                            <div>\r\n                                <p>Name: ${user.name}</p>\r\n                                <p>Email: ${user.email}</p>\r\n                            </div>\r\n                            `\r\n                        )}\r\n                    </div>\r\n                    `\r\n                    : html `<p>Laoding user data...</p>`\r\n                }\r\n            </div>\r\n        `\r\n    }\r\n}\r\n\r\ndeclare global{\r\n    interface HTMLElementTagNameMap{\r\n        \"my-api\" : MyApi;\r\n    }\r\n}"]}